name: build

on:
  workflow_dispatch:
  push:
#    branches: [ "master" ]

env:
  MAJOR_VERSION: "8"
  MINOR_VERSION: "3"
  UI_PROJECT_PATH: "src/MoneyFox.Ui/MoneyFox.Ui.csproj"
  CORE_TEST_PROJECT_PATH: "src/MoneyFox.Core.Tests/MoneyFox.Core.Tests.csproj"
  UI_TEST_PROJECT_PATH: "src/MoneyFox.Ui.Tests/MoneyFox.Ui.Tests.csproj"
  INFRASTRUCTURE_PROJECT_PATH: "src/MoneyFox.Infrastructure.Tests/MoneyFox.Infrastructure.Tests.csproj"

jobs:
  buildWin:

    runs-on: windows-latest

    steps:
      - name: Install signing certificate
        env:
          WINDOWS_CERTIFICATE_BASE64: ${{ secrets.WINDOWS_CERTIFICATE }}
          WINDOWS_CERTIFICATE_PASSWORD: ${{ secrets.WINDOWS_CERTIFICATE_PASSWORD }}
        run: |
          # create variables
          $CERTIFICATE_PATH="$RUNNER_TEMP\build_certificate.p12"

          # import certificate from secrets
          [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($WINDOWS_CERTIFICATE_BASE64)) | Out-File -Encoding "ASCII" $CERTIFICATE_PATH

          Get-ChildItem -Path $CERTIFICATE_PATH |
            Import-PfxCertificate -CertStoreLocation Cert:\CurrentUser\My -Password $WINDOWS_CERTIFICATE_PASSWORD
          
        
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set values in manifest
        run: |
          [xml]$xmlDoc = Get-Content '$GITHUB_WORKSPACE\MoneyFox\MoneyFox\src\MoneyFox.Ui\Platforms\Windows\Package.appxmanifest'
          $xmlDoc.Package.Identity.Name="57598ApplySolutionsSoftwa.MoneyFox"
          $xmlDoc.Package.Identity.Publisher="CN=071307B1-B0E3-434A-AD0E-FFF714A7245C"
          $xmlDoc.Package.Identity.Version="${{env.MAJOR_VERSION}}.${{env.MINOR_VERSION}}.${{ GITHUB.run_number }}"
          $xmlDoc.Save('$GITHUB_WORKSPACE\MoneyFox\MoneyFox\src\MoneyFox.Ui\Platforms\Windows\Package.appxmanifest')  

      - name: Set association to store
        run: |
          [xml]$xmlDoc = Get-Content '$GITHUB_WORKSPACE\MoneyFox\MoneyFox\src\MoneyFox.Ui\Platforms\Windows\Package.StoreAssociation.xml'
          $xmlDoc.StoreAssociation.Publisher="CN=071307B1-B0E3-434A-AD0E-FFF714A7245C"
          $xmlDoc.StoreAssociation.ProductReservedInfo.MainPackageIdentityName="57598ApplySolutionsSoftwa.MoneyFox"
          $xmlDoc.Save('$GITHUB_WORKSPACE\MoneyFox\MoneyFox\src\MoneyFox.Ui\Platforms\Windows\Package.StoreAssociation.xml')       

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{env.DOTNET_VERSION}}

      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: Install MAUI Workload
        run: |
          dotnet workload install maui-windows
          dotnet workload install maui-mobile

      - name: Restore Dependencies
        run: dotnet restore ${{env.UI_PROJECT_PATH}}

      - name: Test
        run: |
          dotnet test ${{env.UI_TEST_PROJECT_PATH}}
          dotnet test ${{env.CORE_TEST_PROJECT_PATH}}
          dotnet test ${{env.INFRASTRUCTURE_PROJECT_PATH}}

      - name: Build Win
        run: dotnet publish ${{env.UI_PROJECT_PATH}} -f net7.0-windows10.0.22621.0 -c Release -o ${{ github.workspace }}/moneyfox-win
        
      - name: Upload Windows build
        uses: actions/upload-artifact@v3
        with:
          name: moneyfox-win
          path: ${{ github.workspace }}/moneyfox-win
  
  
  buildAndroid:

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{env.DOTNET_VERSION}}
          
      - name: Get android version
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m')${{ GITHUB.run_number }}"
  
      - run: |
          echo $GITHUB_WORKSPACE
          echo ....
          Get-Childitem –Path $GITHUB_WORKSPACE -Recurse -Include MoneyFox.Ui.csproj
          tree /F $GITHUB_WORKSPACE
      
      - name: Set Android Version
        run: |
          
          $Version = ${{ steps.date.outputs.date }}
          $DisplayVersion = "${{env.MAJOR_VERSION}}.${{env.MINOR_VERSION}}.${{ GITHUB.run_number }}"
          Write-Host "DisplayVersion:" $DisplayVersion
          Write-Host "Version:" $Version
          [xml]$xml = Get-Content -Path $GITHUB_WORKSPACE\Src\MoneyFox.Ui\MoneyFox.Ui.csproj
          $xml.Project.PropertyGroup[3].ApplicationDisplayVersion = $DisplayVersion
          $xml.Project.PropertyGroup[3].ApplicationVersion = $Version
          Set-Content " $GITHUB_WORKSPACE\Src\MoneyFox.Ui\MoneyFox.Ui.csproj" -Value $xml.InnerXml -Force
          Write-Host $xml.InnerXml

      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: Install MAUI Workload
        run: dotnet workload install maui-mobile

      - name: Restore Dependencies
        run: dotnet restore ${{env.UI_PROJECT_PATH}}

      - name: Test
        run: |
          dotnet test ${{env.UI_TEST_PROJECT_PATH}}
          dotnet test ${{env.CORE_TEST_PROJECT_PATH}}
          dotnet test ${{env.INFRASTRUCTURE_PROJECT_PATH}}

      - name: Build Android
        run: | 
          dotnet publish ${{env.UI_PROJECT_PATH}} \
            -f net7.0-android \
            -c Release \
            -o ${{ github.workspace }}/moneyfox-android \
            /p:AndroidKeyStore="True" \
            /p:AndroidSigningKeyAlias="${{ secrets.KEYSTORE_ALIAS }}" \
            /p:AndroidSigningKeyStore="${{ secrets.RELEASE_KEYSTORE }}" \
            /p:AndroidSigningKeyPass="${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" \
            /p:AndroidSigningStorePass="${{ secrets.RELEASE_KEYSTORE_PASSWORD }}"

      - name: Upload Android build
        uses: actions/upload-artifact@v3
        with:
          name: moneyfox-android
          path: ${{ github.workspace }}/moneyfox-android
          
  
  buildiOS:

    runs-on: macos-13

    steps:
      - name: Xcode Select
        uses: devbotsxyz/xcode-select@v1.1.0
        with:
          version: "14.3"
          
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set iOS Version
        shell: pwsh
        run: |
          $DisplayVersion = "${{env.MAJOR_VERSION}}.${{env.MINOR_VERSION}}.${{ GITHUB.run_number }}"
          $Version = ${{ GITHUB.run_number }}
  
          Write-Host "DisplayVersion:" $DisplayVersion
          Write-Host "Version:" $Version
          
          Get-Childitem –Path $GITHUB_WORKSPACE -Recurse -Include *HSG*
  
          [xml]$xml = Get-Content -Path $GITHUB_WORKSPACE/Src/MoneyFox.Ui/MoneyFox.Ui.csproj
          $xml.Project.PropertyGroup[0].ApplicationDisplayVersion = $Version
          $xml.Project.PropertyGroup[0].ApplicationVersion = $DisplayVersion
          Set-Content "$GITHUB_WORKSPACE/Src/MoneyFox.Ui/MoneyFox.Ui.csproj" -Value $xml.InnerXml -Force
          Write-Host $xml.InnerXml
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{env.DOTNET_VERSION}}

      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: Install MAUI Workloads
        run: dotnet workload install maui-mobile

      - name: Restore Dependencies
        run: dotnet restore ${{env.UI_PROJECT_PATH}}

      - name: Test
        run: |
          dotnet test ${{env.UI_TEST_PROJECT_PATH}}
          dotnet test ${{env.CORE_TEST_PROJECT_PATH}}
          dotnet test ${{env.INFRASTRUCTURE_PROJECT_PATH}}
        
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
        
      - name: Build iOS
        run: dotnet build ${{env.UI_PROJECT_PATH}} -f net7.0-ios -c Release -o ${{ github.workspace }}/moneyfox-ios  /p:packageApp=True

      - name: Upload iOS build
        uses: actions/upload-artifact@v3
        with:
          name: moneyfox-ios
          path: ${{ github.workspace }}/moneyfox-ios